#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <behaviors.dtsi>

#include "./node-free/helper.h"
#include "./node-free/keypos-36.h"

/ {
    combos {
        compatible = "zmk,combos";

        USCORE {
            bindings = <&kp UNDERSCORE>;
            key-positions = <LT3 LT2>;
        };

        MINUS_ {
            bindings = <&kp KP_MINUS>;
            key-positions = <LT2 LT1>;
        };

        APOSTR {
            bindings = <&kp APOSTROPHE>;
            key-positions = <RT1 RT2>;
        };

        DBL_QUOTES {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <RT2 RT3>;
        };

        BT_CLEAR {
            bindings = <&bt BT_CLR>;
            key-positions = <LT4 LT0>;
            layers = <2>;
        };
    };

    behaviors {
        // NOTE: Mix of official doc example and urob properties
        hrm_l: left_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            // TODO: this probably needs to be 15-19 (middle row of the right hand)
            // (but will be unnecessary/more intuitive anyways when using the nodefree config)
            hold-trigger-key-positions = <6 7 8 9>;    // <---[[right-hand keys]]
            hold-trigger-on-release;
        };

        hrm_r: right_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            // TODO: this probably needs to be 10-14 (middle row of the left hand)
            // (but will be unnecessary/more intuitive anyways when using the nodefree config)
            hold-trigger-key-positions = <0 1 2 3>;    // <---[[left-hand keys]]
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Letters {
            bindings = <
  &kp Q         &kp W          &kp F         &kp P          &kp G                          &kp J         &kp L           &kp U           &kp Y           &kp SEMI
  &hrm_l LALT A &hrm_l LCTRL R &hrm_l LGUI S &hrm_l LSHFT T &kp D                          &kp H         &hrm_r RSHFT N  &hrm_r RGUI E   &hrm_r RCTRL I  &hrm_r RALT O
  &kp Z         &kp X          &kp C         &kp V          &kp B                          &kp K         &kp M           &kp COMMA       &kp DOT         &kp FSLH
                                             &kp TAB        &lt 2 RET  &kp ESC   &kp EQUAL &lt 1 SPACE   &kp BSPC
            >;
        };

        FN {
            bindings = <
  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5     &trans  &kp N7  &kp N8  &kp N9  &trans
  &kp F6   &kp F7   &kp F8  &kp F9  &kp F10    &kp N0  &kp N4  &kp N5  &kp N6  &trans
  &kp F11  &kp F12  &trans  &trans  &trans     &trans  &kp N1  &kp N2  &kp N3  &trans
                    &trans  &trans  &trans     &trans  &trans  &trans
            >;
        };

        Sym {
            bindings = <
  &trans        &kp LS(UNDER)  &kp MINUS      &kp EQUAL     &trans           &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)
  &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &trans         &kp SQT       &kp BSLH      &kp LBKT      &kp RBKT
  &kp GRAVE     &trans         &trans         &trans        &trans           &trans         &kp LS(DQT)   &kp LS(PIPE)  &kp LS(LBRC)  &kp LS(RBRC)
                               &trans         &trans        &trans           &trans         &trans        &trans
            >;
        };
    };
};

/* vim: set filetype=devicetree: */
